@model KhoaXayDung.Models.Tin
@using KhoaXayDung.Models

@{
    ViewBag.Title = "Thêm bài đăng";
    Layout = "~/Views/Shared/_LayoutQL.cshtml";
    KhoaXayDungEntities db = new KhoaXayDungEntities();
    var listLoaiTin = db.LoaiTins.Where(m => m.Show == true && m.IDcha == null).ToList();
}
@functions {
    KhoaXayDungEntities db = new KhoaXayDungEntities();

    public List<LoaiTin> subMenu(int idcha)
    {
        var list = db.LoaiTins.Where(w => w.IDcha == idcha && w.Show == true).ToList();
        return list;
    }
}
<style>
    canvas {
        width: 100% !important;
    }
</style>

<h2>Thêm bài đăng</h2>

@using (Html.BeginForm("Create", "QLTin", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MaLT, "Loại tin", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @*@Html.DropDownList("MaLT", null, "Chọn loại tin", htmlAttributes: new { @class = "form-control" })*@
                <div class="panel-group" id="accordion">
                    <div class="panel panel-success">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapse1">
                                    Chọn loại tin
                                </a>
                            </h4>
                        </div>
                        <div id="collapse1" class="panel-collapse collapse">
                            <div class="panel-body">
                                <ul>
                                    @foreach (var _menu in listLoaiTin)
                                    {
                                        if (subMenu(_menu.MaLT).Count() > 0)
                                        {
                                            <li style="font-weight: 700">@_menu.TenLT</li>
                                            <ul>
                                                @foreach (var _sub in subMenu(_menu.MaLT))
                                                {
                                                    if (subMenu(_sub.MaLT).Count() > 0)
                                                    {
                                                        <li style="font-weight: 700">@_sub.TenLT</li>
                                                        <ul>
                                                            @foreach (var _sub1 in subMenu(_sub.MaLT))
                                                            {
                                                                <li>
                                                                    <input type="radio" name="MaLT" value="@_sub1.MaLT">
                                                                    <label for="age1">@_sub1.TenLT</label>
                                                                    <br>
                                                                </li>
                                                            }
                                                        </ul>
                                                    }
                                                    else
                                                    {
                                                        <li>
                                                            <input type="radio" name="MaLT" value="@_sub.MaLT">
                                                            <label for="age1">@_sub.TenLT</label>
                                                            <br>
                                                        </li>

                                                    }
                                                }
                                            </ul>
                                        }
                                        else
                                        {
                                            <li>
                                                <input type="radio" name="MaLT" value="@_menu.MaLT">
                                                <label for="age1">@_menu.TenLT</label>
                                                <br>
                                            </li>

                                        }
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-warning" id="kiemtra_MaLT">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                Chọn loại tin trước khi thêm bài đăng!
                            </h4>
                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.MaLT, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="mainform" style="display:none;">
            <div class="form-group">
                @Html.LabelFor(model => model.TenT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.TenT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TenT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="frmMT">
                @Html.LabelFor(model => model.MT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.MT, new { htmlAttributes = new { @class = "form-control", style = "height:100px;resize:vertical;" } })
                    @Html.ValidationMessageFor(model => model.MT, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group" id="frmDD">
                <div class="col-md-2 control-label">
                    <label>
                        Địa Điểm
                    </label>
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DiaDiem, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DiaDiem, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group" id="frmTGDR">
                <div class="col-md-2 control-label">
                    <label>
                        Thời Gian Diễn Ra
                    </label>
                </div>
                <div class="col-md-8">
                    <input type="datetime" class="form-control" name="ThoiGianDienRa" value="@String.Format("{0:MM/dd/yyyy HH:mm:ss}", DateTime.Now)" />
                    @Html.ValidationMessageFor(model => model.ThoiGianDienRa, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group" id="frmFile">
                @Html.LabelFor(model => model.F, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @*@Html.EditorFor(model => model.F, new { htmlAttributes = new { @class = "form-control" } })*@
                    <input type="file" name="F" id="File" class="form-control" />
                    @Html.ValidationMessageFor(model => model.F, "", new { @class = "text-danger" })
                    @if (ViewBag.ThongBaoFile != "" && ViewBag.ThongBaoFile != null)
                    {
                        <p class="text-danger">@ViewBag.ThongBaoFile</p>
                    }
                </div>
            </div>

            @*<div class="form-group">
                <div class="col-md-2 control-label">
                    <label>
                        Ngày Đăng
                    </label>
                </div>
                <div class="col-md-8">
                    <input type="datetime" class="form-control" name="NgayDang" value="@String.Format("{0:MM/dd/yyyy HH:mm:ss}", DateTime.Now)" />
                    @Html.ValidationMessageFor(model => model.NgayDang, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group" id="frmND">
                @Html.LabelFor(model => model.ND, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.ND, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ND, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="frmHinh">
                @Html.LabelFor(model => model.H, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @*@Html.EditorFor(model => model.H, new { htmlAttributes = new { @class = "form-control" } })*@
                    @*<input type="file" name="H" id="Hinh" class="form-control" />
                        @Html.ValidationMessageFor(model => model.H, "", new { @class = "text-danger" })*@

                    <!-- image cropping -->
                    <div class="cropper">
                        <div class="row">
                            <div class="col-md-12 ml-auto mr-auto">
                                <div class="row">
                                    <div class="col-md-9">
                                        <!-- <h3 class="page-header">Demo:</h3> -->
                                        <div class="img-container">
                                            @*@if (Model.H != null)
                                                {
                                                    <img id="image" src="~/img/ckeditor/Images/@Model.H" alt="Picture" class="img-responsive">
                                                }
                                                else
                                                {*@
                                            <img id="image" src="~/img/antoine-barres.jpg" alt="Picture" class="img-responsive">
                                            @*}*@
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <!-- <h3 class="page-header">Preview:</h3> -->
                                        <div class="docs-preview clearfix">
                                            <div class="img-preview preview-lg"></div>
                                            <div class="img-preview preview-md"></div>
                                            <div class="img-preview preview-sm"></div>
                                            <div class="img-preview preview-xs"></div>
                                        </div>
                                        <!-- <h3 class="page-header">Data:</h3> -->
                                        <div class="docs-data">
                                            <div class="input-group input-group-sm">
                                                <label class="input-group-addon" for="dataX">X</label>
                                                <input type="text" class="form-control" id="dataX" placeholder="x">
                                                <span class="input-group-addon">px</span>
                                            </div>
                                            <div class="input-group input-group-sm">
                                                <label class="input-group-addon" for="dataY">Y</label>
                                                <input type="text" class="form-control" id="dataY" placeholder="y">
                                                <span class="input-group-addon">px</span>
                                            </div>
                                            <div class="input-group input-group-sm">
                                                <label class="input-group-addon" for="dataWidth">Chiều rộng</label>
                                                <input type="text" class="form-control" id="dataWidth" placeholder="Chiều rộng">
                                                <span class="input-group-addon">px</span>
                                            </div>
                                            <div class="input-group input-group-sm">
                                                <label class="input-group-addon" for="dataHeight">Chiều cao</label>
                                                <input type="text" class="form-control" id="dataHeight" placeholder="Chiều cao">
                                                <span class="input-group-addon">px</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-9 col-sm-12 col-xs-12 col-12 docs-buttons ml-auto mr-auto">
                                <!-- <h3 class="page-header">Toolbar:</h3> -->
                                <div class="btn-group">
                                    <button type="button" class="btn btn-default" data-method="reset" title="Reset">
                                        <span class="docs-tooltip" data-toggle="tooltip" title="Làm mới">
                                            <span class="fa fa-refresh"></span>
                                            Làm mới
                                        </span>
                                    </button>
                                    <label class="btn btn-primary btn-upload" for="inputImage" title="Upload image file">
                                        <input type="file" class="sr-only" id="inputImage" name="file" accept="image/*">
                                        <span class="docs-tooltip" data-toggle="tooltip" title="Chọn ảnh để đăng">
                                            <span class="fa fa-upload"></span>
                                            Chọn ảnh
                                        </span>
                                    </label>
                                    <button type="button" class="btn btn-success" data-method="getCroppedCanvas">
                                        <span class="docs-tooltip" data-toggle="tooltip" title="Cắt trước khi lưu">
                                            Lưu
                                        </span>
                                    </button>
                                </div>
                                <!-- Show the cropped image in modal -->
                                <div class="modal fade docs-cropped in" id="getCroppedCanvasModal" tabindex="-1" role="dialog" aria-labelledby="getCroppedCanvasTitle" aria-hidden="true">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header" style="padding-top: 0px;padding-bottom: 0px;">
                                                <h4 class="modal-title" id="getCroppedCanvasTitle">Hoàn Thành</h4>
                                            </div>
                                            <div class="modal-body">
                                            </div>
                                            <div class="modal-footer text-center">
                                                <input type="hidden" id="idcropAnh" name="H" />
                                                @*<input type="hidden" value="@User.InFo().Id" name="idhocvien" />*@
                                                <input type="submit" class="btn btn-success" value="Xác nhận lưu" />
                                                <a class="btn btn-primary" id="download" href="javascript:void(0);" download="cropped.png">Tải xuống</a>
                                                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- /.modal -->
                            </div>
                            <!-- /.docs-toggles -->
                        </div>
                    </div>

                </div>
            </div>


            @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-8">
                        <input type="submit" value="Thêm" class="btn btn-success" />
                    </div>
                </div>*@
        </div>
    </div>
}

<div>
    @Html.ActionLink("Danh sách bài đăng", "Index")
</div>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/ckeditor/ckeditor.js"></script>
<script type="text/javascript" src="/ckfinder/ckfinder.js"></script>
<script type="text/javascript">
    var editor = CKEDITOR.replace('ND');
    CKFinder.setupCKEditor(editor, '/ckfinder');
</script>

<script>
    $(document).ready(function () {
        CheckMainForm();
        $('[name="MaLT"]').change(function () {
            CheckMainForm();
        })
        $("input[type=text]").keydown(function (e) {
            if ($("#MaLT").val() == 45) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: Ctrl+C
                    (e.keyCode == 67 && e.ctrlKey === true) ||
                    // Allow: Ctrl+X
                    (e.keyCode == 88 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            }
        });
    })
    function CheckMainForm() {
        var selected = $('[name="MaLT"]');
        if (selected.is(':checked')) {
            $("#kiemtra_MaLT").hide();
            $("#mainform").show();
            $("#frmMT").show();
            $("#frmHinh").show();
            $("#frmFile").show();

            if (selected == 2059) {
                $("#frmDD").show();
                $("#frmTGDR").show();
                $("#frmMT").hide();
            } else {
                $("#frmDD").hide();
                $("#frmTGDR").hide();
                $("#frmMT").show();
            }
        }
        else {
            $("#mainform").hide();
        }
    }
</script>

@*<script src="~/Scripts/jquery-3.1.1.js"></script>*@
<script>
    $(document).ready(function () {
        AspectRatio();

        function AspectRatio() {
            var inputImage = $('#idcropAnh');
            var $image = $('#image');
            var $download = $('#download');
            var $dataX = $('#dataX');
            var $dataY = $('#dataY');
            var $dataHeight = $('#dataHeight');
            var $dataWidth = $('#dataWidth');
            var $dataRotate = $('#dataRotate');
            var $dataScaleX = $('#dataScaleX');
            var $dataScaleY = $('#dataScaleY');

            var options = {
                aspectRatio: 19 / 9,
                preview: '.img-preview',
                crop: function (e) {
                    $dataX.val(Math.round(e.x));
                    $dataY.val(Math.round(e.y));
                    $dataHeight.val(Math.round(e.height));
                    $dataWidth.val(Math.round(e.width));
                }
            }
            // Cropper
            $image.on({
                'build.cropper': function (e) {

                },
                'built.cropper': function (e) {

                },
                'cropstart.cropper': function (e) {

                },
                'cropmove.cropper': function (e) {

                },
                'cropend.cropper': function (e) {

                },
                'crop.cropper': function (e) {

                }
            }).cropper(options);

            // Buttons
            if (!$.isFunction(document.createElement('canvas').getContext)) {
                $('button[data-method="getCroppedCanvas"]').prop('disabled', true);
            }
            if (typeof document.createElement('cropper').style.transition === 'undefined') {
                $('button[data-method="rotate"]').prop('disabled', true);
                $('button[data-method="scale"]').prop('disabled', true);
            }
            // Download
            if (typeof $download[0].download === 'undefined') {
                $download.addClass('disabled');
            }
            // Methods
            $('.docs-buttons').on('click', '[data-method]', function () {
                var $this = $(this);
                var data = $this.data();
                var $target;
                var result;

                if ($this.prop('disabled') || $this.hasClass('disabled')) {
                    return;
                }

                if ($image.data('cropper') && data.method) {
                    data = $.extend({}, data); // Clone a new one
                    if (typeof data.target !== 'undefined') {
                        $target = $(data.target);

                        if (typeof data.option === 'undefined') {
                            try {
                                data.option = JSON.parse($target.val());
                            } catch (e) {
                                console.log(e.message);
                            }
                        }
                    }
                    result = $image.cropper(data.method, data.option, data.secondOption);
                    switch (data.method) {
                        case 'scaleX':
                        case 'scaleY':
                            $(this).data('option', -data.option);
                            break;
                        case 'getCroppedCanvas':
                            if (result) {

                                // Bootstrap's Modal
                                $('#getCroppedCanvasModal').modal().find('.modal-body').html(result);

                                if (!$download.hasClass('disabled')) {
                                    var x = result.toDataURL();


                                    inputImage.val(x.replace('data:image/png;base64,', ''));
                                    $download.attr('href', result.toDataURL());
                                }
                            }
                            break;
                    }
                    if ($.isPlainObject(result) && $target) {
                        try {
                            $target.val(JSON.stringify(result));
                        } catch (e) {
                            console.log(e.message);
                        }
                    }
                }
            });
            // Import image
            var $inputImage = $('#inputImage');
            var URL = window.URL || window.webkitURL;
            var blobURL;

            if (URL) {
                $inputImage.change(function () {
                    var files = this.files;
                    var file;
                    if (!$image.data('cropper')) {
                        return;
                    }
                    if (files && files.length) {
                        file = files[0];
                        if (/^image\/\w+$/.test(file.type)) {
                            blobURL = URL.createObjectURL(file);
                            $image.one('built.cropper', function () {

                                // Revoke when load complete
                                URL.revokeObjectURL(blobURL);
                            }).cropper('reset').cropper('replace', blobURL);
                            $inputImage.val('');
                        } else {
                            window.alert('Please choose an image file.');
                        }
                    }
                });
            } else {
                $inputImage.prop('disabled', true).parent().addClass('disabled');
            }
        }
    });
</script>
<!-- /Cropper -->
